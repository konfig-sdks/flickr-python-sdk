# coding: utf-8

"""
    Flickr API Schema

    A subset of Flickr's API defined in Swagger format.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from flickr_python_sdk.pydantic.owner import Owner
from flickr_python_sdk.pydantic.photo_comments import PhotoComments
from flickr_python_sdk.pydantic.photo_dates import PhotoDates
from flickr_python_sdk.pydantic.photo_description import PhotoDescription
from flickr_python_sdk.pydantic.photo_editability import PhotoEditability
from flickr_python_sdk.pydantic.photo_notes import PhotoNotes
from flickr_python_sdk.pydantic.photo_people import PhotoPeople
from flickr_python_sdk.pydantic.photo_permissions import PhotoPermissions
from flickr_python_sdk.pydantic.photo_publiceditability import PhotoPubliceditability
from flickr_python_sdk.pydantic.photo_tags import PhotoTags
from flickr_python_sdk.pydantic.photo_title import PhotoTitle
from flickr_python_sdk.pydantic.photo_urls import PhotoUrls
from flickr_python_sdk.pydantic.photo_usage import PhotoUsage
from flickr_python_sdk.pydantic.photo_visibility import PhotoVisibility

class Photo(BaseModel):
    tags: typing.Optional[PhotoTags] = Field(None, alias='tags')

    title: typing.Optional[PhotoTitle] = Field(None, alias='title')

    description: typing.Optional[PhotoDescription] = Field(None, alias='description')

    comments: typing.Optional[PhotoComments] = Field(None, alias='comments')

    dates: typing.Optional[PhotoDates] = Field(None, alias='dates')

    dateuploaded: typing.Optional[str] = Field(None, alias='dateuploaded')

    editability: typing.Optional[PhotoEditability] = Field(None, alias='editability')

    farm: typing.Optional[str] = Field(None, alias='farm')

    id: typing.Optional[str] = Field(None, alias='id')

    isfavorite: typing.Optional[bool] = Field(None, alias='isfavorite')

    license: typing.Optional[str] = Field(None, alias='license')

    media: typing.Optional[str] = Field(None, alias='media')

    notes: typing.Optional[PhotoNotes] = Field(None, alias='notes')

    originalsecret: typing.Optional[str] = Field(None, alias='originalsecret')

    owner: typing.Optional[Owner] = Field(None, alias='owner')

    people: typing.Optional[PhotoPeople] = Field(None, alias='people')

    permissions: typing.Optional[PhotoPermissions] = Field(None, alias='permissions')

    publiceditability: typing.Optional[PhotoPubliceditability] = Field(None, alias='publiceditability')

    rotation: typing.Optional[str] = Field(None, alias='rotation')

    safe: typing.Optional[bool] = Field(None, alias='safe')

    safety_level: typing.Optional[str] = Field(None, alias='safety_level')

    secret: typing.Optional[str] = Field(None, alias='secret')

    server: typing.Optional[str] = Field(None, alias='server')

    urls: typing.Optional[PhotoUrls] = Field(None, alias='urls')

    usage: typing.Optional[PhotoUsage] = Field(None, alias='usage')

    views: typing.Optional[str] = Field(None, alias='views')

    visibility: typing.Optional[PhotoVisibility] = Field(None, alias='visibility')
    class Config:
        arbitrary_types_allowed = True
