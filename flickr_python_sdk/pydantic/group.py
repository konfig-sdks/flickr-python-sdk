# coding: utf-8

"""
    Flickr API Schema

    A subset of Flickr's API defined in Swagger format.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from flickr_python_sdk.pydantic.cover import Cover
from flickr_python_sdk.pydantic.group_blast import GroupBlast
from flickr_python_sdk.pydantic.group_description import GroupDescription
from flickr_python_sdk.pydantic.group_members import GroupMembers
from flickr_python_sdk.pydantic.group_name import GroupName
from flickr_python_sdk.pydantic.group_pool_count import GroupPoolCount
from flickr_python_sdk.pydantic.group_privacy import GroupPrivacy
from flickr_python_sdk.pydantic.group_restrictions import GroupRestrictions
from flickr_python_sdk.pydantic.group_roles import GroupRoles
from flickr_python_sdk.pydantic.group_rules import GroupRules
from flickr_python_sdk.pydantic.group_throttle import GroupThrottle
from flickr_python_sdk.pydantic.group_topic_count import GroupTopicCount
from flickr_python_sdk.pydantic.photo_urls import PhotoURLs

class Group(BaseModel):
    description: typing.Optional[GroupDescription] = Field(None, alias='description')

    blast: typing.Optional[GroupBlast] = Field(None, alias='blast')

    cover: typing.Optional[Cover] = Field(None, alias='cover')

    coverphoto_farm: typing.Optional[str] = Field(None, alias='coverphoto_farm')

    coverphoto_server: typing.Optional[str] = Field(None, alias='coverphoto_server')

    coverphoto_url: typing.Optional[PhotoURLs] = Field(None, alias='coverphoto_url')

    iconfarm: typing.Optional[str] = Field(None, alias='iconfarm')

    iconserver: typing.Optional[str] = Field(None, alias='iconserver')

    id: typing.Optional[str] = Field(None, alias='id')

    is_admin: typing.Optional[bool] = Field(None, alias='is_admin')

    is_member: typing.Optional[bool] = Field(None, alias='is_member')

    is_moderator: typing.Optional[bool] = Field(None, alias='is_moderator')

    ispoolmoderated: typing.Optional[bool] = Field(None, alias='ispoolmoderated')

    lang: typing.Optional[str] = Field(None, alias='lang')

    members: typing.Optional[GroupMembers] = Field(None, alias='members')

    name: typing.Optional[GroupName] = Field(None, alias='name')

    path_alias: typing.Optional[str] = Field(None, alias='path_alias')

    pool_count: typing.Optional[GroupPoolCount] = Field(None, alias='pool_count')

    pool_rows: typing.Optional[int] = Field(None, alias='pool_rows')

    privacy: typing.Optional[GroupPrivacy] = Field(None, alias='privacy')

    restrictions: typing.Optional[GroupRestrictions] = Field(None, alias='restrictions')

    roles: typing.Optional[GroupRoles] = Field(None, alias='roles')

    rules: typing.Optional[GroupRules] = Field(None, alias='rules')

    throttle: typing.Optional[GroupThrottle] = Field(None, alias='throttle')

    topic_count: typing.Optional[GroupTopicCount] = Field(None, alias='topic_count')
    class Config:
        arbitrary_types_allowed = True
