# coding: utf-8

"""
    Flickr API Schema

    A subset of Flickr's API defined in Swagger format.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from flickr_python_sdk.pydantic.topic_message import TopicMessage

class Topic(BaseModel):
    author: typing.Optional[str] = Field(None, alias='author')

    author_is_deleted: typing.Optional[bool] = Field(None, alias='author_is_deleted')

    author_path_alias: typing.Optional[str] = Field(None, alias='author_path_alias')

    authorname: typing.Optional[str] = Field(None, alias='authorname')

    can_delete: typing.Optional[bool] = Field(None, alias='can_delete')

    can_edit: typing.Optional[bool] = Field(None, alias='can_edit')

    can_reply: typing.Optional[bool] = Field(None, alias='can_reply')

    count_replies: typing.Optional[int] = Field(None, alias='count_replies')

    datecreate: typing.Optional[str] = Field(None, alias='datecreate')

    datelastpost: typing.Optional[str] = Field(None, alias='datelastpost')

    iconfarm: typing.Optional[str] = Field(None, alias='iconfarm')

    iconserver: typing.Optional[str] = Field(None, alias='iconserver')

    id: typing.Optional[str] = Field(None, alias='id')

    is_locked: typing.Optional[bool] = Field(None, alias='is_locked')

    is_pro: typing.Optional[bool] = Field(None, alias='is_pro')

    is_sticky: typing.Optional[bool] = Field(None, alias='is_sticky')

    last_reply: typing.Optional[str] = Field(None, alias='last_reply')

    lastedit: typing.Optional[str] = Field(None, alias='lastedit')

    message: typing.Optional[TopicMessage] = Field(None, alias='message')

    role: typing.Optional[str] = Field(None, alias='role')

    subject: typing.Optional[str] = Field(None, alias='subject')
    class Config:
        arbitrary_types_allowed = True
