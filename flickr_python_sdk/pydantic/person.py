# coding: utf-8

"""
    Flickr API Schema

    A subset of Flickr's API defined in Swagger format.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from flickr_python_sdk.pydantic.cover import Cover
from flickr_python_sdk.pydantic.person_description import PersonDescription
from flickr_python_sdk.pydantic.person_disable_keyboard_shortcuts import PersonDisableKeyboardShortcuts
from flickr_python_sdk.pydantic.person_location import PersonLocation
from flickr_python_sdk.pydantic.person_mbox_sha1_sum import PersonMboxSha1Sum
from flickr_python_sdk.pydantic.person_mobileurl import PersonMobileurl
from flickr_python_sdk.pydantic.person_photos import PersonPhotos
from flickr_python_sdk.pydantic.person_photosurl import PersonPhotosurl
from flickr_python_sdk.pydantic.person_profileurl import PersonProfileurl
from flickr_python_sdk.pydantic.person_realname import PersonRealname
from flickr_python_sdk.pydantic.person_timezone import PersonTimezone
from flickr_python_sdk.pydantic.person_unread_messages import PersonUnreadMessages
from flickr_python_sdk.pydantic.person_username import PersonUsername
from flickr_python_sdk.pydantic.photo_urls import PhotoURLs

class Person(BaseModel):
    description: typing.Optional[PersonDescription] = Field(None, alias='description')

    can_buy_pro: typing.Optional[bool] = Field(None, alias='can_buy_pro')

    cover: typing.Optional[Cover] = Field(None, alias='cover')

    coverphoto: typing.Optional[PhotoURLs] = Field(None, alias='coverphoto')

    coverphoto_farm: typing.Optional[str] = Field(None, alias='coverphoto_farm')

    coverphoto_server: typing.Optional[str] = Field(None, alias='coverphoto_server')

    disable_keyboard_shortcuts: typing.Optional[PersonDisableKeyboardShortcuts] = Field(None, alias='disable_keyboard_shortcuts')

    expire: typing.Optional[bool] = Field(None, alias='expire')

    has_stats: typing.Optional[bool] = Field(None, alias='has_stats')

    iconfarm: typing.Optional[str] = Field(None, alias='iconfarm')

    iconserver: typing.Optional[str] = Field(None, alias='iconserver')

    id: typing.Optional[str] = Field(None, alias='id')

    is_ad_free: typing.Optional[bool] = Field(None, alias='is_ad_free')

    ispro: typing.Optional[bool] = Field(None, alias='ispro')

    location: typing.Optional[PersonLocation] = Field(None, alias='location')

    mbox_sha1sum: typing.Optional[PersonMboxSha1Sum] = Field(None, alias='mbox_sha1sum')

    mobileurl: typing.Optional[PersonMobileurl] = Field(None, alias='mobileurl')

    nsid: typing.Optional[str] = Field(None, alias='nsid')

    path_alias: typing.Optional[str] = Field(None, alias='path_alias')

    photos: typing.Optional[PersonPhotos] = Field(None, alias='photos')

    photosurl: typing.Optional[PersonPhotosurl] = Field(None, alias='photosurl')

    profileurl: typing.Optional[PersonProfileurl] = Field(None, alias='profileurl')

    realname: typing.Optional[PersonRealname] = Field(None, alias='realname')

    timezone: typing.Optional[PersonTimezone] = Field(None, alias='timezone')

    unread_messages: typing.Optional[PersonUnreadMessages] = Field(None, alias='unread_messages')

    user_secret: typing.Optional[str] = Field(None, alias='user_secret')

    username: typing.Optional[PersonUsername] = Field(None, alias='username')

    yintl: typing.Optional[str] = Field(None, alias='yintl')
    class Config:
        arbitrary_types_allowed = True
